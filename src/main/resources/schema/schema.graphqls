type Query {
    getUser: UserType
    getAllTech: [TechType]
    getAllCourse: [CourseType]
    getCourse(courseId: String): CourseType
}

type Mutation {
    signUp(input: SignUpInput): ResultType
    verifyEmail(code: String): ResultType
    signIn(input: SignInInput): SignInResultType
    reIssue: ReIssueResultType
    updateUser(input: UpdateUserInput): ResultType
    updateEmail(email: String): ResultType
    updateAvatar(avatar: String): ResultType
    removeUser: ResultType
    addTech(input: AddTechInput): ResultType
    addCourse(input: AddCourseInput): ResultType
}

type UserType {
    name: String
    email: String
    emailAgreed: Boolean
    avatar: String
}

type ResultType {
    success: Boolean
    error: String
}

type SignInResultType {
    success: Boolean
    error: String

    accessToken: String

    name: String
    email: String
    emailAgreed: Boolean
    avatar: String
}

type ReIssueResultType {
    success: Boolean
    error: String

    accessToken: String
}

type TechType {
    id: ID
    name: String
    logo: String
}

type CourseType {
    courseId: ID
    title: String
    subTitle: String
    logo: String
    mainColor: String
    level: String
    price: Int
    mainTechs: [TechType]
    prerequisite: [CourseType]
    videoCategories: [VideoCategoryType]
}

type VideoCategoryType {
    categoryId: String
    title: String
    videos: [VideoType]
}

type VideoType {
    videoId: String
    title: String
    time: Int
    link: String
}

input SignInInput {
    email: String
    password: String
}

input SignUpInput {
    name: String
    email: String
    emailAgreed: Boolean
    password: String
}

input AddTechInput {
    name: String
    logo: String
}

input AddCourseInput {
    title: String
    subTitle: String
    logo: String
    mainColor: String
    level: String
    price: Int
    mainTechs: [Long]
    prerequisite: [String]
    videoCategories: [CategoryInput]
}

input CategoryInput {
    title: String
    videos: [VideoInput]
}

input VideoInput {
    title: String
    time: Int
    link: String
}

input UpdateUserInput {
    name: String!
    emailAgreed: Boolean!
}

scalar Long