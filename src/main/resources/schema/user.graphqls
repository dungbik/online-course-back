extend type Query {
    getUser: UserType
}

extend type Mutation {
    signUp(input: SignUpInput): ResultType
    verifyEmail(code: String): ResultType
    signIn(input: SignInInput): SignInResultType
    reIssue: ReIssueResultType
    updateUser(input: UpdateUserInput): ResultType
    updateEmail(email: String): ResultType
    updateAvatar(avatar: String): ResultType
    removeUser: ResultType
}

type UserType {
    name: String
    email: String
    emailAgreed: Boolean
    avatar: String
}

type SignInResultType {
    success: Boolean
    error: String
    accessToken: String
    user: UserType
}

type ReIssueResultType {
    success: Boolean
    error: String
    accessToken: String
}

input SignInInput {
    email: String
    password: String
}

input SignUpInput {
    name: String
    email: String
    emailAgreed: Boolean
    password: String
}

input UpdateUserInput {
    name: String!
    emailAgreed: Boolean!
}